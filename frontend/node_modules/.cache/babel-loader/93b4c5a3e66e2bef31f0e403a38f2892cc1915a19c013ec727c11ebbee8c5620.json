{"ast":null,"code":"var _jsxFileName = \"/Users/kcwis/Sites/heavy-hitters/frontend/src/components/DataDistributionSelector.jsx\";\nimport React from 'react';\n\n/**\n * Component for selecting the data distribution type\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataDistributionSelector = ({\n  value,\n  onChange\n}) => {\n  // Distribution visualizations (simplified representations)\n  const distributions = {\n    uniform: [0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4],\n    zipf: [0.9, 0.5, 0.3, 0.2, 0.15, 0.12, 0.1, 0.08, 0.07, 0.06],\n    normal: [0.1, 0.2, 0.4, 0.7, 0.9, 0.9, 0.7, 0.4, 0.2, 0.1]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-3\",\n      children: \"Data Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: `relative border-2 rounded-lg p-4 cursor-pointer transition-all ${value === 'uniform' ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-blue-200'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"distribution\",\n          value: \"uniform\",\n          checked: value === 'uniform',\n          onChange: () => onChange('uniform'),\n          className: \"sr-only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-24 flex items-end justify-center space-x-1 mb-3 px-2\",\n          children: distributions.uniform.map((height, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-blue-400\",\n            style: {\n              height: `${height * 100}%`\n            }\n          }, `uniform-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium block\",\n            children: \"Uniform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500 block\",\n            children: \"Equal probability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: `relative border-2 rounded-lg p-4 cursor-pointer transition-all ${value === 'zipf' ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-blue-200'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"distribution\",\n          value: \"zipf\",\n          checked: value === 'zipf',\n          onChange: () => onChange('zipf'),\n          className: \"sr-only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-24 flex items-end justify-center space-x-1 mb-3 px-2\",\n          children: distributions.zipf.map((height, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-green-400\",\n            style: {\n              height: `${height * 100}%`\n            }\n          }, `zipf-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium block\",\n            children: \"Zipf (Power Law)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500 block\",\n            children: \"Few frequent elements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: `relative border-2 rounded-lg p-4 cursor-pointer transition-all ${value === 'normal' ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-blue-200'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"distribution\",\n          value: \"normal\",\n          checked: value === 'normal',\n          onChange: () => onChange('normal'),\n          className: \"sr-only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-24 flex items-end justify-center space-x-1 mb-3 px-2\",\n          children: distributions.normal.map((height, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-purple-400\",\n            style: {\n              height: `${height * 100}%`\n            }\n          }, `normal-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium block\",\n            children: \"Normal (Gaussian)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500 block\",\n            children: \"Elements cluster in middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-gray-50 rounded-md\",\n      children: [value === 'uniform' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: \"In a uniform distribution, all elements have an equal probability of appearing. This is the simplest distribution but rarely occurs in real-world scenarios. The algorithm typically performs worse with this distribution as there are no clear heavy hitters.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), value === 'zipf' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: \"The Zipf distribution (power law) models many real-world phenomena where a small number of elements occur very frequently while most elements are rare. This distribution is common in natural language, web traffic, and social media. The algorithm typically performs best with this distribution.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), value === 'normal' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: \"The normal (Gaussian) distribution has elements clustered around the middle of the domain with symmetrically decreasing frequency toward the edges. This distribution occurs in many natural and social phenomena. The algorithm typically performs moderately well with this distribution.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = DataDistributionSelector;\nexport default DataDistributionSelector;\nvar _c;\n$RefreshReg$(_c, \"DataDistributionSelector\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DataDistributionSelector","value","onChange","distributions","uniform","zipf","normal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","checked","map","height","i","style","_c","$RefreshReg$"],"sources":["/Users/kcwis/Sites/heavy-hitters/frontend/src/components/DataDistributionSelector.jsx"],"sourcesContent":["import React from 'react';\n\n/**\n * Component for selecting the data distribution type\n */\nconst DataDistributionSelector = ({ value, onChange }) => {\n  // Distribution visualizations (simplified representations)\n  const distributions = {\n    uniform: [0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4],\n    zipf: [0.9, 0.5, 0.3, 0.2, 0.15, 0.12, 0.1, 0.08, 0.07, 0.06],\n    normal: [0.1, 0.2, 0.4, 0.7, 0.9, 0.9, 0.7, 0.4, 0.2, 0.1]\n  };\n  \n  return (\n    <div className=\"mb-6\">\n      <h3 className=\"text-lg font-semibold mb-3\">Data Distribution</h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <label className={`relative border-2 rounded-lg p-4 cursor-pointer transition-all ${value === 'uniform' ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-blue-200'}`}>\n          <input\n            type=\"radio\"\n            name=\"distribution\"\n            value=\"uniform\"\n            checked={value === 'uniform'}\n            onChange={() => onChange('uniform')}\n            className=\"sr-only\"\n          />\n          <div className=\"h-24 flex items-end justify-center space-x-1 mb-3 px-2\">\n            {distributions.uniform.map((height, i) => (\n              <div \n                key={`uniform-${i}`} \n                className=\"w-full bg-blue-400\" \n                style={{ height: `${height * 100}%` }}\n              />\n            ))}\n          </div>\n          <div className=\"text-center\">\n            <span className=\"font-medium block\">Uniform</span>\n            <span className=\"text-sm text-gray-500 block\">\n              Equal probability\n            </span>\n          </div>\n        </label>\n        \n        <label className={`relative border-2 rounded-lg p-4 cursor-pointer transition-all ${value === 'zipf' ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-blue-200'}`}>\n          <input\n            type=\"radio\"\n            name=\"distribution\"\n            value=\"zipf\"\n            checked={value === 'zipf'}\n            onChange={() => onChange('zipf')}\n            className=\"sr-only\"\n          />\n          <div className=\"h-24 flex items-end justify-center space-x-1 mb-3 px-2\">\n            {distributions.zipf.map((height, i) => (\n              <div \n                key={`zipf-${i}`} \n                className=\"w-full bg-green-400\" \n                style={{ height: `${height * 100}%` }}\n              />\n            ))}\n          </div>\n          <div className=\"text-center\">\n            <span className=\"font-medium block\">Zipf (Power Law)</span>\n            <span className=\"text-sm text-gray-500 block\">\n              Few frequent elements\n            </span>\n          </div>\n        </label>\n        \n        <label className={`relative border-2 rounded-lg p-4 cursor-pointer transition-all ${value === 'normal' ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-blue-200'}`}>\n          <input\n            type=\"radio\"\n            name=\"distribution\"\n            value=\"normal\"\n            checked={value === 'normal'}\n            onChange={() => onChange('normal')}\n            className=\"sr-only\"\n          />\n          <div className=\"h-24 flex items-end justify-center space-x-1 mb-3 px-2\">\n            {distributions.normal.map((height, i) => (\n              <div \n                key={`normal-${i}`} \n                className=\"w-full bg-purple-400\" \n                style={{ height: `${height * 100}%` }}\n              />\n            ))}\n          </div>\n          <div className=\"text-center\">\n            <span className=\"font-medium block\">Normal (Gaussian)</span>\n            <span className=\"text-sm text-gray-500 block\">\n              Elements cluster in middle\n            </span>\n          </div>\n        </label>\n      </div>\n      \n      <div className=\"mt-4 p-4 bg-gray-50 rounded-md\">\n        {value === 'uniform' && (\n          <p className=\"text-sm\">\n            In a uniform distribution, all elements have an equal probability of appearing.\n            This is the simplest distribution but rarely occurs in real-world scenarios.\n            The algorithm typically performs worse with this distribution as there are no\n            clear heavy hitters.\n          </p>\n        )}\n        \n        {value === 'zipf' && (\n          <p className=\"text-sm\">\n            The Zipf distribution (power law) models many real-world phenomena where a small\n            number of elements occur very frequently while most elements are rare. This\n            distribution is common in natural language, web traffic, and social media.\n            The algorithm typically performs best with this distribution.\n          </p>\n        )}\n        \n        {value === 'normal' && (\n          <p className=\"text-sm\">\n            The normal (Gaussian) distribution has elements clustered around the middle of the\n            domain with symmetrically decreasing frequency toward the edges. This distribution\n            occurs in many natural and social phenomena. The algorithm typically performs\n            moderately well with this distribution.\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DataDistributionSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}