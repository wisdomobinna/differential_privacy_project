{"ast":null,"code":"var _jsxFileName = \"/Users/kcwis/Sites/heavy-hitters/frontend/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar } from 'recharts';\nimport './Dashboard.css';\n\n/**\n * Dashboard component for visualizing distribution impact on algorithm performance\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  data\n}) => {\n  _s();\n  const [metric, setMetric] = useState('f1_score');\n  const [chartType, setChartType] = useState('bar');\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard empty\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No distribution impact data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Format data for different chart types\n  const barChartData = data.map(item => ({\n    distribution: item.distribution,\n    basicAlgorithm: item.basic[metric],\n    countMinSketch: item.cms[metric],\n    numHeavyHitters: item.numTrueHeavyHitters\n  }));\n\n  // Format for radar chart\n  const radarChartData = [{\n    subject: 'Precision',\n    basic: 0,\n    cms: 0\n  }, {\n    subject: 'Recall',\n    basic: 0,\n    cms: 0\n  }, {\n    subject: 'F1 Score',\n    basic: 0,\n    cms: 0\n  }];\n\n  // Calculate averages for radar chart\n  data.forEach(item => {\n    radarChartData[0].basic += item.basic.precision / data.length;\n    radarChartData[0].cms += item.cms.precision / data.length;\n    radarChartData[1].basic += item.basic.recall / data.length;\n    radarChartData[1].cms += item.cms.recall / data.length;\n    radarChartData[2].basic += item.basic.f1_score / data.length;\n    radarChartData[2].cms += item.cms.f1_score / data.length;\n  });\n  const metricLabels = {\n    precision: 'Precision',\n    recall: 'Recall',\n    f1_score: 'F1 Score'\n  };\n  const distributionDescriptions = {\n    uniform: \"In uniform distribution, all elements appear with equal probability. The lack of clear heavy hitters makes detection more challenging.\",\n    zipf: \"Zipf distribution (power law) has a few very frequent elements, making heavy hitters more distinct and easier to detect.\",\n    normal: \"Normal distribution clusters elements around the center of the domain with symmetrically decreasing frequency toward the edges.\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"distribution-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Metric:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: metric,\n          onChange: e => setMetric(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"precision\",\n            children: \"Precision\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"recall\",\n            children: \"Recall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"f1_score\",\n            children: \"F1 Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-type-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: chartType === 'bar' ? 'active' : '',\n          onClick: () => setChartType('bar'),\n          children: \"Bar Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: chartType === 'radar' ? 'active' : '',\n          onClick: () => setChartType('radar'),\n          children: \"Radar Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: chartType === 'bar' ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: barChartData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 60\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"distribution\",\n            label: {\n              value: 'Data Distribution',\n              position: 'bottom',\n              offset: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            label: {\n              value: metricLabels[metric],\n              angle: -90,\n              position: 'insideLeft'\n            },\n            domain: [0, 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            verticalAlign: \"top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"basicAlgorithm\",\n            name: \"Basic Algorithm\",\n            fill: \"#8884d8\",\n            maxBarSize: 60\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"countMinSketch\",\n            name: \"Count-Min Sketch\",\n            fill: \"#82ca9d\",\n            maxBarSize: 60\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(RadarChart, {\n          outerRadius: 150,\n          data: radarChartData,\n          children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n            dataKey: \"subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n            domain: [0, 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Radar, {\n            name: \"Basic Algorithm\",\n            dataKey: \"basic\",\n            stroke: \"#8884d8\",\n            fill: \"#8884d8\",\n            fillOpacity: 0.6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Radar, {\n            name: \"Count-Min Sketch\",\n            dataKey: \"cms\",\n            stroke: \"#82ca9d\",\n            fill: \"#82ca9d\",\n            fillOpacity: 0.6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"distribution-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Distribution Characteristics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-cards\",\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [item.distribution.charAt(0).toUpperCase() + item.distribution.slice(1), \" Distribution\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"distribution-preview\",\n            children: [item.distribution === 'uniform' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bars-container\",\n              children: [0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4].map((height, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bar\",\n                style: {\n                  height: `${height * 100}%`\n                }\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), item.distribution === 'zipf' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bars-container\",\n              children: [0.9, 0.5, 0.3, 0.2, 0.15, 0.12, 0.1, 0.08].map((height, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bar\",\n                style: {\n                  height: `${height * 100}%`\n                }\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), item.distribution === 'normal' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bars-container\",\n              children: [0.1, 0.2, 0.4, 0.7, 0.9, 0.7, 0.4, 0.2].map((height, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bar\",\n                style: {\n                  height: `${height * 100}%`\n                }\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: distributionDescriptions[item.distribution]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"distribution-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"True Heavy Hitters:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: item.numTrueHeavyHitters\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Best Algorithm:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: item.cms.f1_score > item.basic.f1_score ? 'Count-Min Sketch' : 'Basic'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"F1 Score Diff:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: Math.abs(item.cms.f1_score - item.basic.f1_score).toFixed(4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, item.distribution, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Key Findings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Zipf Distribution:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), \" Generally provides the best algorithm performance due to the clear distinction between frequent and infrequent elements.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Uniform Distribution:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), \" Presents the biggest challenge for heavy hitter detection since all elements have similar frequencies.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Count-Min Sketch Advantage:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), \" The performance gap between basic and CMS algorithms is most pronounced with uniform and normal distributions.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Real-World Applicability:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), \" Since many real-world phenomena follow Zipf distributions (e.g., word frequencies, web traffic), the algorithm is well-suited for practical applications.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"iBIJ5Nw/cmer4FHmr0rGuLRgggE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","jsxDEV","_jsxDEV","Dashboard","data","_s","metric","setMetric","chartType","setChartType","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","barChartData","map","item","distribution","basicAlgorithm","basic","countMinSketch","cms","numHeavyHitters","numTrueHeavyHitters","radarChartData","subject","forEach","precision","recall","f1_score","metricLabels","distributionDescriptions","uniform","zipf","normal","value","onChange","e","target","onClick","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","label","position","offset","angle","domain","verticalAlign","name","fill","maxBarSize","outerRadius","stroke","fillOpacity","charAt","toUpperCase","slice","i","style","Math","abs","toFixed","_c","$RefreshReg$"],"sources":["/Users/kcwis/Sites/heavy-hitters/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar } from 'recharts';\nimport './Dashboard.css';\n\n/**\n * Dashboard component for visualizing distribution impact on algorithm performance\n */\nconst Dashboard = ({ data }) => {\n  const [metric, setMetric] = useState('f1_score');\n  const [chartType, setChartType] = useState('bar');\n  \n  if (!data || data.length === 0) {\n    return (\n      <div className=\"dashboard empty\">\n        <p>No distribution impact data available</p>\n      </div>\n    );\n  }\n  \n  // Format data for different chart types\n  const barChartData = data.map(item => ({\n    distribution: item.distribution,\n    basicAlgorithm: item.basic[metric],\n    countMinSketch: item.cms[metric],\n    numHeavyHitters: item.numTrueHeavyHitters\n  }));\n  \n  // Format for radar chart\n  const radarChartData = [\n    { subject: 'Precision', basic: 0, cms: 0 },\n    { subject: 'Recall', basic: 0, cms: 0 },\n    { subject: 'F1 Score', basic: 0, cms: 0 }\n  ];\n  \n  // Calculate averages for radar chart\n  data.forEach(item => {\n    radarChartData[0].basic += item.basic.precision / data.length;\n    radarChartData[0].cms += item.cms.precision / data.length;\n    radarChartData[1].basic += item.basic.recall / data.length;\n    radarChartData[1].cms += item.cms.recall / data.length;\n    radarChartData[2].basic += item.basic.f1_score / data.length;\n    radarChartData[2].cms += item.cms.f1_score / data.length;\n  });\n  \n  const metricLabels = {\n    precision: 'Precision',\n    recall: 'Recall',\n    f1_score: 'F1 Score'\n  };\n  \n  const distributionDescriptions = {\n    uniform: \"In uniform distribution, all elements appear with equal probability. The lack of clear heavy hitters makes detection more challenging.\",\n    zipf: \"Zipf distribution (power law) has a few very frequent elements, making heavy hitters more distinct and easier to detect.\",\n    normal: \"Normal distribution clusters elements around the center of the domain with symmetrically decreasing frequency toward the edges.\"\n  };\n  \n  return (\n    <div className=\"distribution-dashboard\">\n      <div className=\"dashboard-controls\">\n        <div className=\"metric-selector\">\n          <label>Metric:</label>\n          <select value={metric} onChange={(e) => setMetric(e.target.value)}>\n            <option value=\"precision\">Precision</option>\n            <option value=\"recall\">Recall</option>\n            <option value=\"f1_score\">F1 Score</option>\n          </select>\n        </div>\n        \n        <div className=\"chart-type-selector\">\n          <button \n            className={chartType === 'bar' ? 'active' : ''}\n            onClick={() => setChartType('bar')}\n          >\n            Bar Chart\n          </button>\n          <button \n            className={chartType === 'radar' ? 'active' : ''}\n            onClick={() => setChartType('radar')}\n          >\n            Radar Chart\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"chart-container\">\n        {chartType === 'bar' ? (\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <BarChart\n              data={barChartData}\n              margin={{ top: 20, right: 30, left: 20, bottom: 60 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis \n                dataKey=\"distribution\" \n                label={{ value: 'Data Distribution', position: 'bottom', offset: 0 }}\n              />\n              <YAxis\n                label={{ value: metricLabels[metric], angle: -90, position: 'insideLeft' }}\n                domain={[0, 1]}\n              />\n              <Tooltip />\n              <Legend verticalAlign=\"top\" />\n              <Bar \n                dataKey=\"basicAlgorithm\" \n                name=\"Basic Algorithm\" \n                fill=\"#8884d8\" \n                maxBarSize={60}\n              />\n              <Bar \n                dataKey=\"countMinSketch\" \n                name=\"Count-Min Sketch\" \n                fill=\"#82ca9d\" \n                maxBarSize={60}\n              />\n            </BarChart>\n          </ResponsiveContainer>\n        ) : (\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <RadarChart outerRadius={150} data={radarChartData}>\n              <PolarGrid />\n              <PolarAngleAxis dataKey=\"subject\" />\n              <PolarRadiusAxis domain={[0, 1]} />\n              <Radar \n                name=\"Basic Algorithm\" \n                dataKey=\"basic\" \n                stroke=\"#8884d8\" \n                fill=\"#8884d8\" \n                fillOpacity={0.6} \n              />\n              <Radar \n                name=\"Count-Min Sketch\" \n                dataKey=\"cms\" \n                stroke=\"#82ca9d\" \n                fill=\"#82ca9d\" \n                fillOpacity={0.6} \n              />\n              <Legend />\n              <Tooltip />\n            </RadarChart>\n          </ResponsiveContainer>\n        )}\n      </div>\n      \n      <div className=\"distribution-details\">\n        <h4>Distribution Characteristics</h4>\n        <div className=\"distribution-cards\">\n          {data.map(item => (\n            <div className=\"distribution-card\" key={item.distribution}>\n              <h5>{item.distribution.charAt(0).toUpperCase() + item.distribution.slice(1)} Distribution</h5>\n              <div className=\"distribution-preview\">\n                {item.distribution === 'uniform' && (\n                  <div className=\"bars-container\">\n                    {[0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4].map((height, i) => (\n                      <div key={i} className=\"bar\" style={{ height: `${height * 100}%` }}></div>\n                    ))}\n                  </div>\n                )}\n                {item.distribution === 'zipf' && (\n                  <div className=\"bars-container\">\n                    {[0.9, 0.5, 0.3, 0.2, 0.15, 0.12, 0.1, 0.08].map((height, i) => (\n                      <div key={i} className=\"bar\" style={{ height: `${height * 100}%` }}></div>\n                    ))}\n                  </div>\n                )}\n                {item.distribution === 'normal' && (\n                  <div className=\"bars-container\">\n                    {[0.1, 0.2, 0.4, 0.7, 0.9, 0.7, 0.4, 0.2].map((height, i) => (\n                      <div key={i} className=\"bar\" style={{ height: `${height * 100}%` }}></div>\n                    ))}\n                  </div>\n                )}\n              </div>\n              <p>{distributionDescriptions[item.distribution]}</p>\n              <div className=\"distribution-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">True Heavy Hitters:</span>\n                  <span className=\"stat-value\">{item.numTrueHeavyHitters}</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Best Algorithm:</span>\n                  <span className=\"stat-value\">\n                    {item.cms.f1_score > item.basic.f1_score ? 'Count-Min Sketch' : 'Basic'}\n                  </span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">F1 Score Diff:</span>\n                  <span className=\"stat-value\">\n                    {Math.abs(item.cms.f1_score - item.basic.f1_score).toFixed(4)}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        <h4>Key Findings</h4>\n        <ul>\n          <li>\n            <strong>Zipf Distribution:</strong> Generally provides the best algorithm performance due to the\n            clear distinction between frequent and infrequent elements.\n          </li>\n          <li>\n            <strong>Uniform Distribution:</strong> Presents the biggest challenge for heavy hitter detection\n            since all elements have similar frequencies.\n          </li>\n          <li>\n            <strong>Count-Min Sketch Advantage:</strong> The performance gap between basic and CMS algorithms\n            is most pronounced with uniform and normal distributions.\n          </li>\n          <li>\n            <strong>Real-World Applicability:</strong> Since many real-world phenomena follow Zipf distributions\n            (e.g., word frequencies, web traffic), the algorithm is well-suited for practical applications.\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,EAAEC,UAAU,EAAEC,SAAS,EAAEC,cAAc,EAAEC,eAAe,EAAEC,KAAK,QAAQ,UAAU;AAC1K,OAAO,iBAAiB;;AAExB;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,UAAU,CAAC;EAChD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEjD,IAAI,CAACiB,IAAI,IAAIA,IAAI,CAACM,MAAM,KAAK,CAAC,EAAE;IAC9B,oBACER,OAAA;MAAKS,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BV,OAAA;QAAAU,QAAA,EAAG;MAAqC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAEV;;EAEA;EACA,MAAMC,YAAY,GAAGb,IAAI,CAACc,GAAG,CAACC,IAAI,KAAK;IACrCC,YAAY,EAAED,IAAI,CAACC,YAAY;IAC/BC,cAAc,EAAEF,IAAI,CAACG,KAAK,CAAChB,MAAM,CAAC;IAClCiB,cAAc,EAAEJ,IAAI,CAACK,GAAG,CAAClB,MAAM,CAAC;IAChCmB,eAAe,EAAEN,IAAI,CAACO;EACxB,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMC,cAAc,GAAG,CACrB;IAAEC,OAAO,EAAE,WAAW;IAAEN,KAAK,EAAE,CAAC;IAAEE,GAAG,EAAE;EAAE,CAAC,EAC1C;IAAEI,OAAO,EAAE,QAAQ;IAAEN,KAAK,EAAE,CAAC;IAAEE,GAAG,EAAE;EAAE,CAAC,EACvC;IAAEI,OAAO,EAAE,UAAU;IAAEN,KAAK,EAAE,CAAC;IAAEE,GAAG,EAAE;EAAE,CAAC,CAC1C;;EAED;EACApB,IAAI,CAACyB,OAAO,CAACV,IAAI,IAAI;IACnBQ,cAAc,CAAC,CAAC,CAAC,CAACL,KAAK,IAAIH,IAAI,CAACG,KAAK,CAACQ,SAAS,GAAG1B,IAAI,CAACM,MAAM;IAC7DiB,cAAc,CAAC,CAAC,CAAC,CAACH,GAAG,IAAIL,IAAI,CAACK,GAAG,CAACM,SAAS,GAAG1B,IAAI,CAACM,MAAM;IACzDiB,cAAc,CAAC,CAAC,CAAC,CAACL,KAAK,IAAIH,IAAI,CAACG,KAAK,CAACS,MAAM,GAAG3B,IAAI,CAACM,MAAM;IAC1DiB,cAAc,CAAC,CAAC,CAAC,CAACH,GAAG,IAAIL,IAAI,CAACK,GAAG,CAACO,MAAM,GAAG3B,IAAI,CAACM,MAAM;IACtDiB,cAAc,CAAC,CAAC,CAAC,CAACL,KAAK,IAAIH,IAAI,CAACG,KAAK,CAACU,QAAQ,GAAG5B,IAAI,CAACM,MAAM;IAC5DiB,cAAc,CAAC,CAAC,CAAC,CAACH,GAAG,IAAIL,IAAI,CAACK,GAAG,CAACQ,QAAQ,GAAG5B,IAAI,CAACM,MAAM;EAC1D,CAAC,CAAC;EAEF,MAAMuB,YAAY,GAAG;IACnBH,SAAS,EAAE,WAAW;IACtBC,MAAM,EAAE,QAAQ;IAChBC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAME,wBAAwB,GAAG;IAC/BC,OAAO,EAAE,wIAAwI;IACjJC,IAAI,EAAE,0HAA0H;IAChIC,MAAM,EAAE;EACV,CAAC;EAED,oBACEnC,OAAA;IAAKS,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCV,OAAA;MAAKS,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCV,OAAA;QAAKS,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BV,OAAA;UAAAU,QAAA,EAAO;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtBd,OAAA;UAAQoC,KAAK,EAAEhC,MAAO;UAACiC,QAAQ,EAAGC,CAAC,IAAKjC,SAAS,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAA1B,QAAA,gBAChEV,OAAA;YAAQoC,KAAK,EAAC,WAAW;YAAA1B,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5Cd,OAAA;YAAQoC,KAAK,EAAC,QAAQ;YAAA1B,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCd,OAAA;YAAQoC,KAAK,EAAC,UAAU;YAAA1B,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENd,OAAA;QAAKS,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClCV,OAAA;UACES,SAAS,EAAEH,SAAS,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAG;UAC/CkC,OAAO,EAAEA,CAAA,KAAMjC,YAAY,CAAC,KAAK,CAAE;UAAAG,QAAA,EACpC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTd,OAAA;UACES,SAAS,EAAEH,SAAS,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAG;UACjDkC,OAAO,EAAEA,CAAA,KAAMjC,YAAY,CAAC,OAAO,CAAE;UAAAG,QAAA,EACtC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENd,OAAA;MAAKS,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BJ,SAAS,KAAK,KAAK,gBAClBN,OAAA,CAACP,mBAAmB;QAACgD,KAAK,EAAC,MAAM;QAACC,MAAM,EAAE,GAAI;QAAAhC,QAAA,eAC5CV,OAAA,CAACd,QAAQ;UACPgB,IAAI,EAAEa,YAAa;UACnB4B,MAAM,EAAE;YAAEC,GAAG,EAAE,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,IAAI,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAG,CAAE;UAAArC,QAAA,gBAErDV,OAAA,CAACV,aAAa;YAAC0D,eAAe,EAAC;UAAK;YAAArC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvCd,OAAA,CAACZ,KAAK;YACJ6D,OAAO,EAAC,cAAc;YACtBC,KAAK,EAAE;cAAEd,KAAK,EAAE,mBAAmB;cAAEe,QAAQ,EAAE,QAAQ;cAAEC,MAAM,EAAE;YAAE;UAAE;YAAAzC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE,CAAC,eACFd,OAAA,CAACX,KAAK;YACJ6D,KAAK,EAAE;cAAEd,KAAK,EAAEL,YAAY,CAAC3B,MAAM,CAAC;cAAEiD,KAAK,EAAE,CAAC,EAAE;cAAEF,QAAQ,EAAE;YAAa,CAAE;YAC3EG,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC;UAAE;YAAA3C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACFd,OAAA,CAACT,OAAO;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACXd,OAAA,CAACR,MAAM;YAAC+D,aAAa,EAAC;UAAK;YAAA5C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9Bd,OAAA,CAACb,GAAG;YACF8D,OAAO,EAAC,gBAAgB;YACxBO,IAAI,EAAC,iBAAiB;YACtBC,IAAI,EAAC,SAAS;YACdC,UAAU,EAAE;UAAG;YAAA/C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACFd,OAAA,CAACb,GAAG;YACF8D,OAAO,EAAC,gBAAgB;YACxBO,IAAI,EAAC,kBAAkB;YACvBC,IAAI,EAAC,SAAS;YACdC,UAAU,EAAE;UAAG;YAAA/C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,gBAEtBd,OAAA,CAACP,mBAAmB;QAACgD,KAAK,EAAC,MAAM;QAACC,MAAM,EAAE,GAAI;QAAAhC,QAAA,eAC5CV,OAAA,CAACN,UAAU;UAACiE,WAAW,EAAE,GAAI;UAACzD,IAAI,EAAEuB,cAAe;UAAAf,QAAA,gBACjDV,OAAA,CAACL,SAAS;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACbd,OAAA,CAACJ,cAAc;YAACqD,OAAO,EAAC;UAAS;YAAAtC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpCd,OAAA,CAACH,eAAe;YAACyD,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC;UAAE;YAAA3C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnCd,OAAA,CAACF,KAAK;YACJ0D,IAAI,EAAC,iBAAiB;YACtBP,OAAO,EAAC,OAAO;YACfW,MAAM,EAAC,SAAS;YAChBH,IAAI,EAAC,SAAS;YACdI,WAAW,EAAE;UAAI;YAAAlD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACFd,OAAA,CAACF,KAAK;YACJ0D,IAAI,EAAC,kBAAkB;YACvBP,OAAO,EAAC,KAAK;YACbW,MAAM,EAAC,SAAS;YAChBH,IAAI,EAAC,SAAS;YACdI,WAAW,EAAE;UAAI;YAAAlD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACFd,OAAA,CAACR,MAAM;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACVd,OAAA,CAACT,OAAO;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IACtB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENd,OAAA;MAAKS,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCV,OAAA;QAAAU,QAAA,EAAI;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCd,OAAA;QAAKS,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChCR,IAAI,CAACc,GAAG,CAACC,IAAI,iBACZjB,OAAA;UAAKS,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCV,OAAA;YAAAU,QAAA,GAAKO,IAAI,CAACC,YAAY,CAAC4C,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG9C,IAAI,CAACC,YAAY,CAAC8C,KAAK,CAAC,CAAC,CAAC,EAAC,eAAa;UAAA;YAAArD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9Fd,OAAA;YAAKS,SAAS,EAAC,sBAAsB;YAAAC,QAAA,GAClCO,IAAI,CAACC,YAAY,KAAK,SAAS,iBAC9BlB,OAAA;cAAKS,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAC5B,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACM,GAAG,CAAC,CAAC0B,MAAM,EAAEuB,CAAC,kBACtDjE,OAAA;gBAAaS,SAAS,EAAC,KAAK;gBAACyD,KAAK,EAAE;kBAAExB,MAAM,EAAE,GAAGA,MAAM,GAAG,GAAG;gBAAI;cAAE,GAAzDuB,CAAC;gBAAAtD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA8D,CAC1E;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN,EACAG,IAAI,CAACC,YAAY,KAAK,MAAM,iBAC3BlB,OAAA;cAAKS,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAC5B,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAACM,GAAG,CAAC,CAAC0B,MAAM,EAAEuB,CAAC,kBACzDjE,OAAA;gBAAaS,SAAS,EAAC,KAAK;gBAACyD,KAAK,EAAE;kBAAExB,MAAM,EAAE,GAAGA,MAAM,GAAG,GAAG;gBAAI;cAAE,GAAzDuB,CAAC;gBAAAtD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA8D,CAC1E;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN,EACAG,IAAI,CAACC,YAAY,KAAK,QAAQ,iBAC7BlB,OAAA;cAAKS,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAC5B,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACM,GAAG,CAAC,CAAC0B,MAAM,EAAEuB,CAAC,kBACtDjE,OAAA;gBAAaS,SAAS,EAAC,KAAK;gBAACyD,KAAK,EAAE;kBAAExB,MAAM,EAAE,GAAGA,MAAM,GAAG,GAAG;gBAAI;cAAE,GAAzDuB,CAAC;gBAAAtD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA8D,CAC1E;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNd,OAAA;YAAAU,QAAA,EAAIsB,wBAAwB,CAACf,IAAI,CAACC,YAAY;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpDd,OAAA;YAAKS,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCV,OAAA;cAAKS,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBV,OAAA;gBAAMS,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAmB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvDd,OAAA;gBAAMS,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEO,IAAI,CAACO;cAAmB;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3D,CAAC,eACNd,OAAA;cAAKS,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBV,OAAA;gBAAMS,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACnDd,OAAA;gBAAMS,SAAS,EAAC,YAAY;gBAAAC,QAAA,EACzBO,IAAI,CAACK,GAAG,CAACQ,QAAQ,GAAGb,IAAI,CAACG,KAAK,CAACU,QAAQ,GAAG,kBAAkB,GAAG;cAAO;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACNd,OAAA;cAAKS,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBV,OAAA;gBAAMS,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAClDd,OAAA;gBAAMS,SAAS,EAAC,YAAY;gBAAAC,QAAA,EACzByD,IAAI,CAACC,GAAG,CAACnD,IAAI,CAACK,GAAG,CAACQ,QAAQ,GAAGb,IAAI,CAACG,KAAK,CAACU,QAAQ,CAAC,CAACuC,OAAO,CAAC,CAAC;cAAC;gBAAA1D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GA3CgCG,IAAI,CAACC,YAAY;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA4CpD,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENd,OAAA;QAAAU,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBd,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,gBACEV,OAAA;YAAAU,QAAA,EAAQ;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,6HAErC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLd,OAAA;UAAAU,QAAA,gBACEV,OAAA;YAAAU,QAAA,EAAQ;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,2GAExC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLd,OAAA;UAAAU,QAAA,gBACEV,OAAA;YAAAU,QAAA,EAAQ;UAA2B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,mHAE9C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLd,OAAA;UAAAU,QAAA,gBACEV,OAAA;YAAAU,QAAA,EAAQ;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,8JAE5C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CAlNIF,SAAS;AAAAqE,EAAA,GAATrE,SAAS;AAoNf,eAAeA,SAAS;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}