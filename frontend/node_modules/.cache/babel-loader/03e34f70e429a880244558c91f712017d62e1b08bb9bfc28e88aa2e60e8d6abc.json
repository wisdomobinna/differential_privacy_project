{"ast":null,"code":"var _jsxFileName = \"/Users/kcwis/Sites/heavy-hitters/frontend/src/components/MetricsDisplay.jsx\";\nimport React from 'react';\nimport './MetricsDisplay.css';\n\n/**\n * Component for displaying algorithm performance metrics\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetricsDisplay = ({\n  metrics,\n  statistics,\n  runtime\n}) => {\n  // Format a value to show 4 decimal places if it's a number\n  const formatValue = value => {\n    if (typeof value === 'number') {\n      // If value is very small, show more decimal places\n      if (Math.abs(value) < 0.0001) {\n        return value.toExponential(4);\n      }\n      return value.toFixed(4);\n    }\n    return value;\n  };\n\n  // Convert runtime to appropriate units with good formatting\n  const formatRuntime = seconds => {\n    if (seconds < 0.001) {\n      return `${(seconds * 1000000).toFixed(2)} Î¼s`;\n    } else if (seconds < 1) {\n      return `${(seconds * 1000).toFixed(2)} ms`;\n    } else if (seconds < 60) {\n      return `${seconds.toFixed(2)} seconds`;\n    } else {\n      const minutes = Math.floor(seconds / 60);\n      const remainingSeconds = seconds % 60;\n      return `${minutes}m ${remainingSeconds.toFixed(1)}s`;\n    }\n  };\n\n  // Get health indicators for metrics\n  const getHealthIndicator = (metric, value) => {\n    let healthClass = 'neutral';\n    switch (metric) {\n      case 'precision':\n      case 'recall':\n      case 'f1_score':\n        if (value >= 0.8) healthClass = 'excellent';else if (value >= 0.6) healthClass = 'good';else if (value >= 0.4) healthClass = 'moderate';else healthClass = 'poor';\n        break;\n      case 'runtime':\n        if (value < 0.1) healthClass = 'excellent';else if (value < 0.5) healthClass = 'good';else if (value < 2) healthClass = 'moderate';else healthClass = 'poor';\n        break;\n      default:\n        break;\n    }\n    return healthClass;\n  };\n  if (!metrics) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-display empty\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No metrics available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metrics-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Algorithm Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-section performance-metrics\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Performance Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-label\",\n            children: \"Precision\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `metric-value health-${getHealthIndicator('precision', metrics.precision)}`,\n            children: formatValue(metrics.precision)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-description\",\n            children: \"Fraction of reported heavy hitters that are true heavy hitters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-label\",\n            children: \"Recall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `metric-value health-${getHealthIndicator('recall', metrics.recall)}`,\n            children: formatValue(metrics.recall)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-description\",\n            children: \"Fraction of true heavy hitters that are reported\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-label\",\n            children: \"F1 Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `metric-value health-${getHealthIndicator('f1_score', metrics.f1_score)}`,\n            children: formatValue(metrics.f1_score)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-description\",\n            children: \"Harmonic mean of precision and recall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-label\",\n            children: \"Runtime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `metric-value health-${getHealthIndicator('runtime', runtime)}`,\n            children: formatRuntime(runtime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-description\",\n            children: \"Time taken to process the data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-section algorithm-statistics\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Algorithm Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), statistics && Object.entries(statistics).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-label\",\n            children: key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-value\",\n            children: formatValue(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-interpretation\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Interpretation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Precision:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), \" \", metrics.precision >= 0.8 ? 'Excellent. Almost all reported heavy hitters are correct.' : metrics.precision >= 0.6 ? 'Good. Most reported heavy hitters are correct.' : metrics.precision >= 0.4 ? 'Moderate. Only some reported heavy hitters are correct.' : 'Poor. Many reported heavy hitters are incorrect.']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Recall:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), \" \", metrics.recall >= 0.8 ? 'Excellent. Almost all true heavy hitters are found.' : metrics.recall >= 0.6 ? 'Good. Most true heavy hitters are found.' : metrics.recall >= 0.4 ? 'Moderate. Only some true heavy hitters are found.' : 'Poor. Many true heavy hitters are missed.']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"F1 Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), \" \", metrics.f1_score >= 0.8 ? 'Excellent overall accuracy.' : metrics.f1_score >= 0.6 ? 'Good overall accuracy.' : metrics.f1_score >= 0.4 ? 'Moderate overall accuracy.' : 'Poor overall accuracy.']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Privacy Impact:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), \" Higher epsilon values provide better accuracy but weaker privacy guarantees.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c = MetricsDisplay;\nexport default MetricsDisplay;\nvar _c;\n$RefreshReg$(_c, \"MetricsDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MetricsDisplay","metrics","statistics","runtime","formatValue","value","Math","abs","toExponential","toFixed","formatRuntime","seconds","minutes","floor","remainingSeconds","getHealthIndicator","metric","healthClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","precision","recall","f1_score","Object","entries","map","key","replace","l","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/kcwis/Sites/heavy-hitters/frontend/src/components/MetricsDisplay.jsx"],"sourcesContent":["import React from 'react';\nimport './MetricsDisplay.css';\n\n/**\n * Component for displaying algorithm performance metrics\n */\nconst MetricsDisplay = ({ metrics, statistics, runtime }) => {\n  // Format a value to show 4 decimal places if it's a number\n  const formatValue = (value) => {\n    if (typeof value === 'number') {\n      // If value is very small, show more decimal places\n      if (Math.abs(value) < 0.0001) {\n        return value.toExponential(4);\n      }\n      return value.toFixed(4);\n    }\n    return value;\n  };\n  \n  // Convert runtime to appropriate units with good formatting\n  const formatRuntime = (seconds) => {\n    if (seconds < 0.001) {\n      return `${(seconds * 1000000).toFixed(2)} Î¼s`;\n    } else if (seconds < 1) {\n      return `${(seconds * 1000).toFixed(2)} ms`;\n    } else if (seconds < 60) {\n      return `${seconds.toFixed(2)} seconds`;\n    } else {\n      const minutes = Math.floor(seconds / 60);\n      const remainingSeconds = seconds % 60;\n      return `${minutes}m ${remainingSeconds.toFixed(1)}s`;\n    }\n  };\n  \n  // Get health indicators for metrics\n  const getHealthIndicator = (metric, value) => {\n    let healthClass = 'neutral';\n    \n    switch (metric) {\n      case 'precision':\n      case 'recall':\n      case 'f1_score':\n        if (value >= 0.8) healthClass = 'excellent';\n        else if (value >= 0.6) healthClass = 'good';\n        else if (value >= 0.4) healthClass = 'moderate';\n        else healthClass = 'poor';\n        break;\n      case 'runtime':\n        if (value < 0.1) healthClass = 'excellent';\n        else if (value < 0.5) healthClass = 'good';\n        else if (value < 2) healthClass = 'moderate';\n        else healthClass = 'poor';\n        break;\n      default:\n        break;\n    }\n    \n    return healthClass;\n  };\n  \n  if (!metrics) {\n    return (\n      <div className=\"metrics-display empty\">\n        <p>No metrics available</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"metrics-display\">\n      <h3>Algorithm Performance</h3>\n      \n      <div className=\"metrics-grid\">\n        <div className=\"metrics-section performance-metrics\">\n          <h4>Performance Metrics</h4>\n          \n          <div className=\"metric-item\">\n            <div className=\"metric-label\">Precision</div>\n            <div className={`metric-value health-${getHealthIndicator('precision', metrics.precision)}`}>\n              {formatValue(metrics.precision)}\n            </div>\n            <div className=\"metric-description\">\n              Fraction of reported heavy hitters that are true heavy hitters\n            </div>\n          </div>\n          \n          <div className=\"metric-item\">\n            <div className=\"metric-label\">Recall</div>\n            <div className={`metric-value health-${getHealthIndicator('recall', metrics.recall)}`}>\n              {formatValue(metrics.recall)}\n            </div>\n            <div className=\"metric-description\">\n              Fraction of true heavy hitters that are reported\n            </div>\n          </div>\n          \n          <div className=\"metric-item\">\n            <div className=\"metric-label\">F1 Score</div>\n            <div className={`metric-value health-${getHealthIndicator('f1_score', metrics.f1_score)}`}>\n              {formatValue(metrics.f1_score)}\n            </div>\n            <div className=\"metric-description\">\n              Harmonic mean of precision and recall\n            </div>\n          </div>\n          \n          <div className=\"metric-item\">\n            <div className=\"metric-label\">Runtime</div>\n            <div className={`metric-value health-${getHealthIndicator('runtime', runtime)}`}>\n              {formatRuntime(runtime)}\n            </div>\n            <div className=\"metric-description\">\n              Time taken to process the data\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"metrics-section algorithm-statistics\">\n          <h4>Algorithm Statistics</h4>\n          \n          {statistics && Object.entries(statistics).map(([key, value]) => (\n            <div className=\"metric-item\" key={key}>\n              <div className=\"metric-label\">{key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}</div>\n              <div className=\"metric-value\">{formatValue(value)}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"metrics-interpretation\">\n        <h4>Interpretation</h4>\n        <ul>\n          <li>\n            <strong>Precision:</strong> {\n              metrics.precision >= 0.8 ? 'Excellent. Almost all reported heavy hitters are correct.' :\n              metrics.precision >= 0.6 ? 'Good. Most reported heavy hitters are correct.' :\n              metrics.precision >= 0.4 ? 'Moderate. Only some reported heavy hitters are correct.' :\n              'Poor. Many reported heavy hitters are incorrect.'\n            }\n          </li>\n          <li>\n            <strong>Recall:</strong> {\n              metrics.recall >= 0.8 ? 'Excellent. Almost all true heavy hitters are found.' :\n              metrics.recall >= 0.6 ? 'Good. Most true heavy hitters are found.' :\n              metrics.recall >= 0.4 ? 'Moderate. Only some true heavy hitters are found.' :\n              'Poor. Many true heavy hitters are missed.'\n            }\n          </li>\n          <li>\n            <strong>F1 Score:</strong> {\n              metrics.f1_score >= 0.8 ? 'Excellent overall accuracy.' :\n              metrics.f1_score >= 0.6 ? 'Good overall accuracy.' :\n              metrics.f1_score >= 0.4 ? 'Moderate overall accuracy.' :\n              'Poor overall accuracy.'\n            }\n          </li>\n          <li>\n            <strong>Privacy Impact:</strong> Higher epsilon values provide better accuracy but weaker privacy guarantees.\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MetricsDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}